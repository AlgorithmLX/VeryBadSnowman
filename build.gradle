plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
}

String ForgeVersion = "${mc_version}-${forge_version}"

group = 'com.valion'
version = "${mod_version}"

java {
    archivesBaseName = 'vbs'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: 'official', version: "1.19"

    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                vbs {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'
            mods {
                vbs {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            property 'forge.logging.console.level', 'debug'

            args '--mod', 'liaveres', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources')

            environment 'target', 'fmluserdevdata'

            mods {
                vbs {
                    source sourceSets.main
                }
            }
        }
    }
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        name = "AlgoMaven"
        url = 'https://repsy.io/mvn/algorithmlx/algomaven/'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:$ForgeVersion"

    implementation fg.deobf("com.algorithmlx:liquid:${mc_version}_${lc_version}")

}
jar {
    manifest {
        attributes([
                "Specification-Title": "LiaVeres",
                "Specification-Vendor": "ExampleDude",
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": "ExampleDude",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile){
    options.encoding = 'UTF-8'
}